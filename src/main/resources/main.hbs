<!DOCTYPE html>
<html>

<head>
  <title>Data Visualization Framework</title>

  <style>
    body {
        margin: 0;
    }
    a {
        background: darkslateblue;
        text-align: center;
        text-decoration: none;
        color: white;
        padding: 20px;
        font-size: 6rem;
        border: 6px solid;
        border-radius: 2rem;
    }

    #header {
        margin: 0;
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        margin-bottom: 40px;
    }

    h2 {
        font-size: 3rem;
        color: darkslateblue;
    }

    #back_btn {
        top: 1rem;
        right: 1rem;
        font-size: 1.3rem;
        width: fit-content;
        position: absolute;
        padding: 5px;
        background-color: darkslateblue;
        color: white;
        border: none;
        border-radius: 5px;
    }

    #msg_box {
        font-size: 1.5rem;
        font-weight: 600;
        color: orangered;
        text-align: center;
        margin-bottom: 20px;
    }

    #data_sources_wrapper {
        display: flex;
        flex-direction: column;
        gap: 20px;
        width: fit-content;
        margin: auto;
    }

    form {
        margin: auto;
        display: flex;
        flex-direction: column;
        width: 17rem;
        color: white;
    }

    input,
    select {
        font-size: 1.3rem;
        border: none;
        padding: 5px;
        border-radius: 3px;
        color: gray;
        margin-bottom: 10px;
    }

    #form_wrapper {
        background-color: darkslateblue;
        padding: 20px;
        width: fit-content;
        margin: auto;
        font-size: 2rem;
        border-radius: 10px;
    }

    #form_btn {
        font-size: 1.3rem;
        width: 20%;
        margin: auto;
        padding: 5px;
        border: none;
        background: lightgrey;
        border-radius: 5px;
    }
  </style>
  <script src='https://cdn.plot.ly/plotly-2.6.3.min.js'></script>
</head>
<body>
    <div id="header">
        <h2>{{name}}</h2>
        <button id="back_btn" onclick="location.href='/'">Back to Home</button>
    </div>
    {{#eq stage 0 }}
    <div id="data_sources_wrapper">
        <a href="/dataplugin?i=0">News</a>
        <a href="/dataplugin?i=1">Twitter</a>
    </div>
    {{/eq}}
    {{#if info}}
         <div id="msg_box">{{info}}</div>
    {{/if}}
    {{#eq stage 1 }}
    <div id="data_sources_wrapper">
        <a href="/visualplugin?i=0">Bar</a>
        <a href="/visualplugin?i=1">Pie</a>
    </div>
    <!--<div id="form_wrapper">
        <form id="form" onsubmit="passParams4Visual()">
            <div id="visual_sources_wrapper">
            <label for="visualplugin">Choose how to visualize:</label>
            <select name="visual" id="visualplugin" multiple>
              <option value="bar">Bar</option>
              <option value="pie">Pie</option>
            </select>
            </div>
            <button id="form_btn" type="submit">OK</button>
        </form>
    </div>-->
    {{/eq}}
    {{#eq stage 2 }}
    <div id="form_wrapper">
         <form id="form" onsubmit="passParams()">
               {{#eq currentPluginName "News"}}
                    <!-- News Plugin Rendering Page -->
                     <label for="time_from">From:</label>
                     <input id="time_from" type="date" name="from"/>
                     <label for="time_to">To:</label>
                     <input id="time_to" type="date" name="to"/>
                     <label for="news_sources">Sources:</label>
                     <select id="news_sources" name="sources">
                         <option value="bbc-news">BBC News</option>
                         <option value="cbs-news">CBS News</option>
                         <option value="abc-news">ABC News</option>
                     </select>
                {{/eq}}
                     {{#eq currentPluginName "Twitter"}}
                         <!-- Twitter Plugin Rendering Page -->
                         <label for="time_from">From:</label>
                                        <input id="time_from" type="time" name="from"/>
                                        <label for="time_to">To:</label>
                                        <input id="time_to" type="time" name="to"/>
                         <label for="mumber_of_data">Number of data:</label>
                         <input id="mumber_of_data" type="number" name="dataNumber"/>
                     {{/eq}}
               <button id="form_btn" type="submit">OK</button>
         </form>
         <div id="chart_wrapper" style="margin-top: 10px">
                <div id="barchart"></div>
                <div id="piechart"></div>
         </div>
    </div>

    {{#each timestamps}}
        <input type="hidden" class="timeline" value="{{this}}"/>
    {{/each}}
    {{#each scores}}
        <input type="hidden" class="score" value="{{this}}"/>
    {{/each}}
    {{/eq}}
</body>
<script type="text/javascript">


function passParams() {
    let phase = "{{currentPluginName}}";
    const form = document.getElementById("form")
    const time_from = document.getElementById("time_from").value
    const time_to = document.getElementById("time_to").value

    let actionUrl = `/getparams?from=${time_from}&to=${time_to}`
    if (phase === "News") {
        actionUrl += "&sources=" + document.getElementById("news_sources").value
    } else if (phase === "Twitter") {
        actionUrl += "&dataNumber=" + document.getElementById("mumber_of_data").value
    }
    form.action = actionUrl
}

const dataLabel = "{{ currentPluginName }}"
const scoresEles = document.getElementsByClassName("score")
const timelines = document.getElementsByClassName("timeline")

function countSentimentScores() {
    let veryNegative = 0, negative = 0, neutral = 0,
        positive = 0, veryPositive = 0

    Array.from(scoresEles).forEach((el) => {
        let score = +el.value
        if (score < -0.6 && score >= -1.0) veryNegative++;
        else if (score < -0.2 && score >= -0.6) negative++;
        else if (score <= 0.2 && score >= -0.2) neutral++;
        else if (score < 0.7 && score >= 0.3) positive++;
        else if (score <= 1.0 && score >= 0.7) veryPositive++;
    })

    return {
        "Very Negative": veryNegative,
        "Negative": negative,
        "Neutral": neutral,
        "Positive": positive,
        "Very Positive": veryPositive
    }
}
// console.log(scores)

if(scoresEles.length != 0) {
    const counts = countSentimentScores();

    var data = [{
      values: [counts["Very Negative"], counts["Negative"], counts["Neutral"], counts["Positive"], counts["Very Positive"]],
      labels: ['Very Negative', 'Negative', 'Neutral', 'Positive', 'Very Positive'],
      domain: {column: 0},
      hoverinfo: 'label+percent',
      hole: .4,
      type: 'pie',
      marker: {
         colors: ['#D3D3D3', '#F4A460', '#90EE90', '#00BFFF', '#8A2BE2']
      }
    }];

    let time_scores = {}
    for (let i = 0; i < timelines.length; i++) {
        //var obj = {}
        let t = timelines[i].value.split(" ")[3]
        time_scores[t] = scoresEles[i].value
        //time_scores.push(obj)
    }
    var time_scores_sorted = {}
    time_scores_sorted = Object.keys(time_scores).sort().reduce(
      (obj, key) => {
        obj[key] = time_scores[key];
        return obj;
      },
      {}
    );
    //Object.keys(time_scores).sort(function ( a, b ) { return b - a; } ).forEach(a=>time_scores_sorted[a]=time_scores[a])
    console.log(time_scores_sorted)
    let x = []
    let scores = []
    /*Array.from(time_scores).forEach((ts) => {
          x.push(ts)
          scores.push(+time_scores[ts])
        })*/
    x = Object.keys(time_scores_sorted)
    scores = Object.values(time_scores_sorted)
       console.log(x)
       console.log(scores)
    /*Array.from(timelines).forEach((tl) => {
            x.push(tl.value.split(" ")[3])
            x.sort()
    })
    let scores = []
        Array.from(scoresEles).forEach((el) => {
                scores.push(+el.value)
        })*/
    //console.log(x)
    //console.log(scores)

    var data1 = [
      {
        x: [...x],
        y: [...scores],
        //x: [1,2,3],
        //y: [1,2,3],
        type: 'bar',
        name: 'bar chart for scores'
      }
    ];
    var layout2 = {
          title: 'Trend of Sentiment Score',
          annotations: [
            {
              font: {
                size: 20
              },
              text: dataLabel,
              x: 0.5,
              y: 0.5
            }],
          height: 400,
          width: 600,
          showlegend: false,
          grid: {rows: 1, columns: 1}
        };

    var layout = {
      title: 'Distribution of Sentiment Score',
      annotations: [
        {
          font: {
            size: 20
          },
          showarrow: false,
          text: dataLabel,
          x: 0.5,
          y: 0.5
        }],
      height: 400,
      width: 600,
      showlegend: false,
      grid: {rows: 1, columns: 1}
    };
    if ("{{currentVisualPluginName}}" == "pie chart") {
        Plotly.newPlot('piechart', data, layout)
    }
    if ("{{currentVisualPluginName}}" == "bar chart") {
    Plotly.newPlot('barchart', data1, layout2);
    }
}

</script>
</html>